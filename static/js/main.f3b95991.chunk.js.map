{"version":3,"sources":["FormPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FormPage","useState","submitting","setSubmitting","submitPOSTAndDownload","code","language","qualityArg","a","axios","post","text","lang","quality","responseType","response","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","className","initialValues","onSubmit","values","validate","validateForm","htmlFor","as","name","type","rows","spellcheck","value","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3b95991.chunk.js","sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Formik, Form, Field } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst apiLocation = 'https://highlighter-api.herokuapp.com/';\n\ninterface FormValues {\n  code: string,\n  lang: string,\n  qualityArg: string,\n}\n\nfunction FormPage() {\n  const [submitting, setSubmitting] = useState(false);\n\n  const validateForm = (values: FormValues) => {\n    if (!values.code) {\n      return { code: 'Code cannot be blank.' };\n    }\n    return {};\n  };\n\n  const submitPOSTAndDownload = async (code: string, language: string, qualityArg: string) => {\n    const response = await axios.post(apiLocation, {\n      text: code,\n      lang: language,\n      quality: qualityArg,\n    }, { responseType: 'blob' });\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'generated.png');\n    document.body.appendChild(link);\n    setSubmitting(false);\n    link.click();\n  };\n\n  return (\n    <div className=\"App\">\n      <Formik\n        initialValues={{\n          code: \"const foo = (): string => 'hello';\",\n          lang: 'typescript',\n          qualityArg: 'medium',\n        }}\n        onSubmit={async (values: FormValues) => {\n          setSubmitting(true);\n          submitPOSTAndDownload(values.code, values.lang, values.qualityArg);\n        }}\n        validate={(values) => validateForm(values)}\n      >\n        <Form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\" htmlFor=\"code\">Code:</label>\n            <div className=\"col-sm-10\">\n              <Field className=\"form-control\" as=\"textarea\" name=\"code\" type=\"text\" rows={20} spellcheck=\"false\" />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\" htmlFor=\"lang\">Language:</label>\n            <div className=\"col-sm-10\">\n              <Field className=\"form-control\" as=\"select\" name=\"lang\">\n                <option value=\"typescript\">Typescript</option>\n                <option value=\"javascript\">Javascript</option>\n                <option value=\"c\">C</option>\n                <option value=\"cpp\">C++</option>\n                <option value=\"csharp\">C#</option>\n                <option value=\"python\">Python</option>\n                <option value=\"java\">Java</option>\n                <option value=\"go\">Go</option>\n                <option value=\"julia\">Julia</option>\n                <option value=\"kotlin\">Kotlin</option>\n                <option value=\"haskell\">Haskell</option>\n                <option value=\"lisp\">Lisp</option>\n                <option value=\"lua\">Lua</option>\n                <option value=\"makefile\">Makefile</option>\n                <option value=\"markdown\">Markdown</option>\n                <option value=\"matlab\">MATLAB</option>\n                <option value=\"mongodb\">MongoDB</option>\n                <option value=\"objectivec\">Objective-C</option>\n                <option value=\"pascal\">Pascal</option>\n                <option value=\"perl\">Perl</option>\n                <option value=\"php\">PHP</option>\n                <option value=\"r\">R</option>\n                <option value=\"racket\">Racket</option>\n                <option value=\"ruby\">Ruby</option>\n                <option value=\"rust\">Rust</option>\n                <option value=\"scala\">Scala</option>\n                <option value=\"scheme\">Scheme</option>\n                <option value=\"swift\">Swift</option>\n                <option value=\"visual-basic\">Visual Basic</option>\n                <option value=\"markup\">Markup</option>\n                <option value=\"json\">JSON</option>\n                <option value=\"css\">CSS</option>\n                <option value=\"latex\">LaTeX</option>\n                <option value=\"graphql\">GraphQL</option>\n                <option value=\"docker\">Docker</option>\n              </Field>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\" htmlFor=\"quality\">Quality:</label>\n            <div className=\"col-sm-10\">\n              <Field className=\"form-control\" as=\"select\" name=\"quality\">\n                <option value=\"medium\">Medium</option>\n                <option value=\"high\">High</option>\n                <option value=\"extreme\">Extreme</option>\n              </Field>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={submitting}>{submitting ? 'Please wait...' : 'Submit'}</button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default FormPage;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport FormPage from './FormPage'; // eslint-disable-line\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"card text-center\">\n        <div className=\"card-header\">\n          <h4>Make a request to the highlighter API</h4>\n        </div>\n        <div className=\"card-body\">\n          <FormPage />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // eslint-disable-line\nimport reportWebVitals from './reportWebVitals'; // eslint-disable-line\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}